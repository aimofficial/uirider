// Generated by view binder compiler. Do not edit!
package com.newtaxiprime.user.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RadioButton;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.newtaxiprime.user.R;
import com.newtaxiprime.user.appcommon.custompalette.FontTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AppUserChoiceItemsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RadioButton ivTick;

  @NonNull
  public final RelativeLayout rltUserChoice;

  @NonNull
  public final FontTextView tvCode;

  @NonNull
  public final FontTextView tvname;

  private AppUserChoiceItemsBinding(@NonNull RelativeLayout rootView, @NonNull RadioButton ivTick,
      @NonNull RelativeLayout rltUserChoice, @NonNull FontTextView tvCode,
      @NonNull FontTextView tvname) {
    this.rootView = rootView;
    this.ivTick = ivTick;
    this.rltUserChoice = rltUserChoice;
    this.tvCode = tvCode;
    this.tvname = tvname;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AppUserChoiceItemsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AppUserChoiceItemsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.app_user_choice_items, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AppUserChoiceItemsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ivTick;
      RadioButton ivTick = ViewBindings.findChildViewById(rootView, id);
      if (ivTick == null) {
        break missingId;
      }

      id = R.id.rltUserChoice;
      RelativeLayout rltUserChoice = ViewBindings.findChildViewById(rootView, id);
      if (rltUserChoice == null) {
        break missingId;
      }

      id = R.id.tv_code;
      FontTextView tvCode = ViewBindings.findChildViewById(rootView, id);
      if (tvCode == null) {
        break missingId;
      }

      id = R.id.tvname;
      FontTextView tvname = ViewBindings.findChildViewById(rootView, id);
      if (tvname == null) {
        break missingId;
      }

      return new AppUserChoiceItemsBinding((RelativeLayout) rootView, ivTick, rltUserChoice, tvCode,
          tvname);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
