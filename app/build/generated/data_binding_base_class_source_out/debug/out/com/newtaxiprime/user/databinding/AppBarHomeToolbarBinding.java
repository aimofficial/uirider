// Generated by view binder compiler. Do not edit!
package com.newtaxiprime.user.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.newtaxiprime.user.R;
import com.newtaxiprime.user.appcommon.custompalette.FontTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AppBarHomeToolbarBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView ivFilter;

  @NonNull
  public final RelativeLayout rltChangeLocation;

  @NonNull
  public final RelativeLayout rltWelcome;

  @NonNull
  public final FontTextView sos;

  @NonNull
  public final FontTextView tvChangeLocation;

  @NonNull
  public final FontTextView tvWelcomeText;

  @NonNull
  public final FontTextView tvWelcomeTextSlogan;

  private AppBarHomeToolbarBinding(@NonNull RelativeLayout rootView, @NonNull ImageView ivFilter,
      @NonNull RelativeLayout rltChangeLocation, @NonNull RelativeLayout rltWelcome,
      @NonNull FontTextView sos, @NonNull FontTextView tvChangeLocation,
      @NonNull FontTextView tvWelcomeText, @NonNull FontTextView tvWelcomeTextSlogan) {
    this.rootView = rootView;
    this.ivFilter = ivFilter;
    this.rltChangeLocation = rltChangeLocation;
    this.rltWelcome = rltWelcome;
    this.sos = sos;
    this.tvChangeLocation = tvChangeLocation;
    this.tvWelcomeText = tvWelcomeText;
    this.tvWelcomeTextSlogan = tvWelcomeTextSlogan;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AppBarHomeToolbarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AppBarHomeToolbarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.app_bar_home_toolbar, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AppBarHomeToolbarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.iv_filter;
      ImageView ivFilter = ViewBindings.findChildViewById(rootView, id);
      if (ivFilter == null) {
        break missingId;
      }

      id = R.id.rlt_change_location;
      RelativeLayout rltChangeLocation = ViewBindings.findChildViewById(rootView, id);
      if (rltChangeLocation == null) {
        break missingId;
      }

      id = R.id.rlt_welcome;
      RelativeLayout rltWelcome = ViewBindings.findChildViewById(rootView, id);
      if (rltWelcome == null) {
        break missingId;
      }

      id = R.id.sos;
      FontTextView sos = ViewBindings.findChildViewById(rootView, id);
      if (sos == null) {
        break missingId;
      }

      id = R.id.tv_change_location;
      FontTextView tvChangeLocation = ViewBindings.findChildViewById(rootView, id);
      if (tvChangeLocation == null) {
        break missingId;
      }

      id = R.id.tv_welcome_text;
      FontTextView tvWelcomeText = ViewBindings.findChildViewById(rootView, id);
      if (tvWelcomeText == null) {
        break missingId;
      }

      id = R.id.tv_welcome_text_slogan;
      FontTextView tvWelcomeTextSlogan = ViewBindings.findChildViewById(rootView, id);
      if (tvWelcomeTextSlogan == null) {
        break missingId;
      }

      return new AppBarHomeToolbarBinding((RelativeLayout) rootView, ivFilter, rltChangeLocation,
          rltWelcome, sos, tvChangeLocation, tvWelcomeText, tvWelcomeTextSlogan);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
