// Generated by view binder compiler. Do not edit!
package com.newtaxiprime.user.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Chronometer;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.newtaxiprime.user.R;
import com.newtaxiprime.user.appcommon.custompalette.FontTextView;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCallingProcessingBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Chronometer chronometerCallTimer;

  @NonNull
  public final ConstraintLayout clAnswerView;

  @NonNull
  public final ConstraintLayout clIncommingView;

  @NonNull
  public final FloatingActionButton fabAnswer;

  @NonNull
  public final FloatingActionButton fabDismiss;

  @NonNull
  public final FloatingActionButton fabEndCall;

  @NonNull
  public final ImageView imgvLoudSpeaker;

  @NonNull
  public final ImageView imgvMuteVoice;

  @NonNull
  public final LinearLayout llLoudspeaker;

  @NonNull
  public final LinearLayout llMic;

  @NonNull
  public final CircleImageView profileImage;

  @NonNull
  public final TextView tvCallConnectionStatus;

  @NonNull
  public final FontTextView tvCallerName;

  private ActivityCallingProcessingBinding(@NonNull ConstraintLayout rootView,
      @NonNull Chronometer chronometerCallTimer, @NonNull ConstraintLayout clAnswerView,
      @NonNull ConstraintLayout clIncommingView, @NonNull FloatingActionButton fabAnswer,
      @NonNull FloatingActionButton fabDismiss, @NonNull FloatingActionButton fabEndCall,
      @NonNull ImageView imgvLoudSpeaker, @NonNull ImageView imgvMuteVoice,
      @NonNull LinearLayout llLoudspeaker, @NonNull LinearLayout llMic,
      @NonNull CircleImageView profileImage, @NonNull TextView tvCallConnectionStatus,
      @NonNull FontTextView tvCallerName) {
    this.rootView = rootView;
    this.chronometerCallTimer = chronometerCallTimer;
    this.clAnswerView = clAnswerView;
    this.clIncommingView = clIncommingView;
    this.fabAnswer = fabAnswer;
    this.fabDismiss = fabDismiss;
    this.fabEndCall = fabEndCall;
    this.imgvLoudSpeaker = imgvLoudSpeaker;
    this.imgvMuteVoice = imgvMuteVoice;
    this.llLoudspeaker = llLoudspeaker;
    this.llMic = llMic;
    this.profileImage = profileImage;
    this.tvCallConnectionStatus = tvCallConnectionStatus;
    this.tvCallerName = tvCallerName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCallingProcessingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCallingProcessingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_calling_processing, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCallingProcessingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.chronometer_call_timer;
      Chronometer chronometerCallTimer = ViewBindings.findChildViewById(rootView, id);
      if (chronometerCallTimer == null) {
        break missingId;
      }

      id = R.id.cl_answer_view;
      ConstraintLayout clAnswerView = ViewBindings.findChildViewById(rootView, id);
      if (clAnswerView == null) {
        break missingId;
      }

      id = R.id.cl_incomming_view;
      ConstraintLayout clIncommingView = ViewBindings.findChildViewById(rootView, id);
      if (clIncommingView == null) {
        break missingId;
      }

      id = R.id.fab_answer;
      FloatingActionButton fabAnswer = ViewBindings.findChildViewById(rootView, id);
      if (fabAnswer == null) {
        break missingId;
      }

      id = R.id.fab_dismiss;
      FloatingActionButton fabDismiss = ViewBindings.findChildViewById(rootView, id);
      if (fabDismiss == null) {
        break missingId;
      }

      id = R.id.fab_end_call;
      FloatingActionButton fabEndCall = ViewBindings.findChildViewById(rootView, id);
      if (fabEndCall == null) {
        break missingId;
      }

      id = R.id.imgv_loud_speaker;
      ImageView imgvLoudSpeaker = ViewBindings.findChildViewById(rootView, id);
      if (imgvLoudSpeaker == null) {
        break missingId;
      }

      id = R.id.imgv_mute_voice;
      ImageView imgvMuteVoice = ViewBindings.findChildViewById(rootView, id);
      if (imgvMuteVoice == null) {
        break missingId;
      }

      id = R.id.ll_loudspeaker;
      LinearLayout llLoudspeaker = ViewBindings.findChildViewById(rootView, id);
      if (llLoudspeaker == null) {
        break missingId;
      }

      id = R.id.ll_mic;
      LinearLayout llMic = ViewBindings.findChildViewById(rootView, id);
      if (llMic == null) {
        break missingId;
      }

      id = R.id.profile_image;
      CircleImageView profileImage = ViewBindings.findChildViewById(rootView, id);
      if (profileImage == null) {
        break missingId;
      }

      id = R.id.tv_call_connection_status;
      TextView tvCallConnectionStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvCallConnectionStatus == null) {
        break missingId;
      }

      id = R.id.tv_caller_name;
      FontTextView tvCallerName = ViewBindings.findChildViewById(rootView, id);
      if (tvCallerName == null) {
        break missingId;
      }

      return new ActivityCallingProcessingBinding((ConstraintLayout) rootView, chronometerCallTimer,
          clAnswerView, clIncommingView, fabAnswer, fabDismiss, fabEndCall, imgvLoudSpeaker,
          imgvMuteVoice, llLoudspeaker, llMic, profileImage, tvCallConnectionStatus, tvCallerName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
