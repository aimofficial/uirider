// Generated by view binder compiler. Do not edit!
package com.newtaxiprime.user.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.HorizontalScrollView;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.denzcoskun.imageslider.ImageSlider;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.newtaxiprime.user.R;
import com.newtaxiprime.user.appcommon.custompalette.FontTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AppContentMainBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout activityFareEstimation;

  @NonNull
  public final ImageView backPool;

  @NonNull
  public final LinearLayout bike;

  @NonNull
  public final BottomNavigationView bottomNavigation;

  @NonNull
  public final RelativeLayout bottomlayout;

  @NonNull
  public final RelativeLayout bottomlayout1;

  @NonNull
  public final RecyclerView carDetailsList;

  @NonNull
  public final FrameLayout cardMap;

  @NonNull
  public final FrameLayout cardMap1;

  @NonNull
  public final CardView cardMapView;

  @NonNull
  public final FontTextView confirmSeat;

  @NonNull
  public final RelativeLayout contentMain;

  @NonNull
  public final CardView cvRefresh;

  @NonNull
  public final FontTextView driverCarName;

  @NonNull
  public final FontTextView driverCarNumber;

  @NonNull
  public final FontTextView driverName;

  @NonNull
  public final FontTextView driverOtp;

  @NonNull
  public final FontTextView driverRating;

  @NonNull
  public final RelativeLayout editMap;

  @NonNull
  public final FontTextView fabStartChat;

  @NonNull
  public final HorizontalScrollView horiviewsslides;

  @NonNull
  public final ImageSlider imageSlider;

  @NonNull
  public final CardView imageslide;

  @NonNull
  public final ImageSlider imageslider;

  @NonNull
  public final CardView imglayout2;

  @NonNull
  public final ImageView imgvChat;

  @NonNull
  public final ImageView ivNav;

  @NonNull
  public final CoordinatorLayout layoutRequestSeat;

  @NonNull
  public final View line;

  @NonNull
  public final RelativeLayout loadingCar;

  @NonNull
  public final RelativeLayout meetlayout;

  @NonNull
  public final RelativeLayout noCar;

  @NonNull
  public final FontTextView noCarTxt;

  @NonNull
  public final RelativeLayout paymentmethod;

  @NonNull
  public final FontTextView paymentmethodChange;

  @NonNull
  public final ImageView paymentmethodImg;

  @NonNull
  public final FontTextView paymentmethodType;

  @NonNull
  public final FontTextView pickupLocation;

  @NonNull
  public final FontTextView poolRate;

  @NonNull
  public final FontTextView poolTitle;

  @NonNull
  public final ImageView profileImage1;

  @NonNull
  public final FontTextView requestuber;

  @NonNull
  public final RelativeLayout requestubers;

  @NonNull
  public final LinearLayout reserve;

  @NonNull
  public final LinearLayout ride;

  @NonNull
  public final ImageView rideicon;

  @NonNull
  public final RelativeLayout rltContactAdmin;

  @NonNull
  public final RelativeLayout rltNavi;

  @NonNull
  public final RelativeLayout rltPoolHeader;

  @NonNull
  public final RecyclerView rvSeatlist;

  @NonNull
  public final ImageView scheduleride;

  @NonNull
  public final RelativeLayout sliders;

  @NonNull
  public final FontTextView textview1;

  @NonNull
  public final TextView tvCount;

  @NonNull
  public final FontTextView tvEta;

  @NonNull
  public final FontTextView tvWaitingChargeFee;

  @NonNull
  public final FontTextView tvWaitingChargeFeeForAcceptedCar;

  @NonNull
  public final ImageView walletImg;

  @NonNull
  public final FontTextView whereto;

  @NonNull
  public final RelativeLayout wheretoAndSchedule;

  private AppContentMainBinding(@NonNull RelativeLayout rootView,
      @NonNull LinearLayout activityFareEstimation, @NonNull ImageView backPool,
      @NonNull LinearLayout bike, @NonNull BottomNavigationView bottomNavigation,
      @NonNull RelativeLayout bottomlayout, @NonNull RelativeLayout bottomlayout1,
      @NonNull RecyclerView carDetailsList, @NonNull FrameLayout cardMap,
      @NonNull FrameLayout cardMap1, @NonNull CardView cardMapView,
      @NonNull FontTextView confirmSeat, @NonNull RelativeLayout contentMain,
      @NonNull CardView cvRefresh, @NonNull FontTextView driverCarName,
      @NonNull FontTextView driverCarNumber, @NonNull FontTextView driverName,
      @NonNull FontTextView driverOtp, @NonNull FontTextView driverRating,
      @NonNull RelativeLayout editMap, @NonNull FontTextView fabStartChat,
      @NonNull HorizontalScrollView horiviewsslides, @NonNull ImageSlider imageSlider,
      @NonNull CardView imageslide, @NonNull ImageSlider imageslider, @NonNull CardView imglayout2,
      @NonNull ImageView imgvChat, @NonNull ImageView ivNav,
      @NonNull CoordinatorLayout layoutRequestSeat, @NonNull View line,
      @NonNull RelativeLayout loadingCar, @NonNull RelativeLayout meetlayout,
      @NonNull RelativeLayout noCar, @NonNull FontTextView noCarTxt,
      @NonNull RelativeLayout paymentmethod, @NonNull FontTextView paymentmethodChange,
      @NonNull ImageView paymentmethodImg, @NonNull FontTextView paymentmethodType,
      @NonNull FontTextView pickupLocation, @NonNull FontTextView poolRate,
      @NonNull FontTextView poolTitle, @NonNull ImageView profileImage1,
      @NonNull FontTextView requestuber, @NonNull RelativeLayout requestubers,
      @NonNull LinearLayout reserve, @NonNull LinearLayout ride, @NonNull ImageView rideicon,
      @NonNull RelativeLayout rltContactAdmin, @NonNull RelativeLayout rltNavi,
      @NonNull RelativeLayout rltPoolHeader, @NonNull RecyclerView rvSeatlist,
      @NonNull ImageView scheduleride, @NonNull RelativeLayout sliders,
      @NonNull FontTextView textview1, @NonNull TextView tvCount, @NonNull FontTextView tvEta,
      @NonNull FontTextView tvWaitingChargeFee,
      @NonNull FontTextView tvWaitingChargeFeeForAcceptedCar, @NonNull ImageView walletImg,
      @NonNull FontTextView whereto, @NonNull RelativeLayout wheretoAndSchedule) {
    this.rootView = rootView;
    this.activityFareEstimation = activityFareEstimation;
    this.backPool = backPool;
    this.bike = bike;
    this.bottomNavigation = bottomNavigation;
    this.bottomlayout = bottomlayout;
    this.bottomlayout1 = bottomlayout1;
    this.carDetailsList = carDetailsList;
    this.cardMap = cardMap;
    this.cardMap1 = cardMap1;
    this.cardMapView = cardMapView;
    this.confirmSeat = confirmSeat;
    this.contentMain = contentMain;
    this.cvRefresh = cvRefresh;
    this.driverCarName = driverCarName;
    this.driverCarNumber = driverCarNumber;
    this.driverName = driverName;
    this.driverOtp = driverOtp;
    this.driverRating = driverRating;
    this.editMap = editMap;
    this.fabStartChat = fabStartChat;
    this.horiviewsslides = horiviewsslides;
    this.imageSlider = imageSlider;
    this.imageslide = imageslide;
    this.imageslider = imageslider;
    this.imglayout2 = imglayout2;
    this.imgvChat = imgvChat;
    this.ivNav = ivNav;
    this.layoutRequestSeat = layoutRequestSeat;
    this.line = line;
    this.loadingCar = loadingCar;
    this.meetlayout = meetlayout;
    this.noCar = noCar;
    this.noCarTxt = noCarTxt;
    this.paymentmethod = paymentmethod;
    this.paymentmethodChange = paymentmethodChange;
    this.paymentmethodImg = paymentmethodImg;
    this.paymentmethodType = paymentmethodType;
    this.pickupLocation = pickupLocation;
    this.poolRate = poolRate;
    this.poolTitle = poolTitle;
    this.profileImage1 = profileImage1;
    this.requestuber = requestuber;
    this.requestubers = requestubers;
    this.reserve = reserve;
    this.ride = ride;
    this.rideicon = rideicon;
    this.rltContactAdmin = rltContactAdmin;
    this.rltNavi = rltNavi;
    this.rltPoolHeader = rltPoolHeader;
    this.rvSeatlist = rvSeatlist;
    this.scheduleride = scheduleride;
    this.sliders = sliders;
    this.textview1 = textview1;
    this.tvCount = tvCount;
    this.tvEta = tvEta;
    this.tvWaitingChargeFee = tvWaitingChargeFee;
    this.tvWaitingChargeFeeForAcceptedCar = tvWaitingChargeFeeForAcceptedCar;
    this.walletImg = walletImg;
    this.whereto = whereto;
    this.wheretoAndSchedule = wheretoAndSchedule;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AppContentMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AppContentMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.app_content_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AppContentMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.activity_fare_estimation;
      LinearLayout activityFareEstimation = ViewBindings.findChildViewById(rootView, id);
      if (activityFareEstimation == null) {
        break missingId;
      }

      id = R.id.back_pool;
      ImageView backPool = ViewBindings.findChildViewById(rootView, id);
      if (backPool == null) {
        break missingId;
      }

      id = R.id.bike;
      LinearLayout bike = ViewBindings.findChildViewById(rootView, id);
      if (bike == null) {
        break missingId;
      }

      id = R.id.bottom_navigation;
      BottomNavigationView bottomNavigation = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigation == null) {
        break missingId;
      }

      id = R.id.bottomlayout;
      RelativeLayout bottomlayout = ViewBindings.findChildViewById(rootView, id);
      if (bottomlayout == null) {
        break missingId;
      }

      id = R.id.bottomlayout1;
      RelativeLayout bottomlayout1 = ViewBindings.findChildViewById(rootView, id);
      if (bottomlayout1 == null) {
        break missingId;
      }

      id = R.id.car_details_list;
      RecyclerView carDetailsList = ViewBindings.findChildViewById(rootView, id);
      if (carDetailsList == null) {
        break missingId;
      }

      id = R.id.card_map;
      FrameLayout cardMap = ViewBindings.findChildViewById(rootView, id);
      if (cardMap == null) {
        break missingId;
      }

      id = R.id.card_map1;
      FrameLayout cardMap1 = ViewBindings.findChildViewById(rootView, id);
      if (cardMap1 == null) {
        break missingId;
      }

      id = R.id.card_map_view;
      CardView cardMapView = ViewBindings.findChildViewById(rootView, id);
      if (cardMapView == null) {
        break missingId;
      }

      id = R.id.confirm_seat;
      FontTextView confirmSeat = ViewBindings.findChildViewById(rootView, id);
      if (confirmSeat == null) {
        break missingId;
      }

      RelativeLayout contentMain = (RelativeLayout) rootView;

      id = R.id.cv_refresh;
      CardView cvRefresh = ViewBindings.findChildViewById(rootView, id);
      if (cvRefresh == null) {
        break missingId;
      }

      id = R.id.driver_car_name;
      FontTextView driverCarName = ViewBindings.findChildViewById(rootView, id);
      if (driverCarName == null) {
        break missingId;
      }

      id = R.id.driver_car_number;
      FontTextView driverCarNumber = ViewBindings.findChildViewById(rootView, id);
      if (driverCarNumber == null) {
        break missingId;
      }

      id = R.id.driver_name;
      FontTextView driverName = ViewBindings.findChildViewById(rootView, id);
      if (driverName == null) {
        break missingId;
      }

      id = R.id.driver_otp;
      FontTextView driverOtp = ViewBindings.findChildViewById(rootView, id);
      if (driverOtp == null) {
        break missingId;
      }

      id = R.id.driver_rating;
      FontTextView driverRating = ViewBindings.findChildViewById(rootView, id);
      if (driverRating == null) {
        break missingId;
      }

      id = R.id.edit_map;
      RelativeLayout editMap = ViewBindings.findChildViewById(rootView, id);
      if (editMap == null) {
        break missingId;
      }

      id = R.id.fab_startChat;
      FontTextView fabStartChat = ViewBindings.findChildViewById(rootView, id);
      if (fabStartChat == null) {
        break missingId;
      }

      id = R.id.horiviewsslides;
      HorizontalScrollView horiviewsslides = ViewBindings.findChildViewById(rootView, id);
      if (horiviewsslides == null) {
        break missingId;
      }

      id = R.id.image_slider;
      ImageSlider imageSlider = ViewBindings.findChildViewById(rootView, id);
      if (imageSlider == null) {
        break missingId;
      }

      id = R.id.imageslide;
      CardView imageslide = ViewBindings.findChildViewById(rootView, id);
      if (imageslide == null) {
        break missingId;
      }

      id = R.id.imageslider;
      ImageSlider imageslider = ViewBindings.findChildViewById(rootView, id);
      if (imageslider == null) {
        break missingId;
      }

      id = R.id.imglayout2;
      CardView imglayout2 = ViewBindings.findChildViewById(rootView, id);
      if (imglayout2 == null) {
        break missingId;
      }

      id = R.id.imgv_chat;
      ImageView imgvChat = ViewBindings.findChildViewById(rootView, id);
      if (imgvChat == null) {
        break missingId;
      }

      id = R.id.iv_nav;
      ImageView ivNav = ViewBindings.findChildViewById(rootView, id);
      if (ivNav == null) {
        break missingId;
      }

      id = R.id.layout_request_seat;
      CoordinatorLayout layoutRequestSeat = ViewBindings.findChildViewById(rootView, id);
      if (layoutRequestSeat == null) {
        break missingId;
      }

      id = R.id.line;
      View line = ViewBindings.findChildViewById(rootView, id);
      if (line == null) {
        break missingId;
      }

      id = R.id.loading_car;
      RelativeLayout loadingCar = ViewBindings.findChildViewById(rootView, id);
      if (loadingCar == null) {
        break missingId;
      }

      id = R.id.meetlayout;
      RelativeLayout meetlayout = ViewBindings.findChildViewById(rootView, id);
      if (meetlayout == null) {
        break missingId;
      }

      id = R.id.no_car;
      RelativeLayout noCar = ViewBindings.findChildViewById(rootView, id);
      if (noCar == null) {
        break missingId;
      }

      id = R.id.no_car_txt;
      FontTextView noCarTxt = ViewBindings.findChildViewById(rootView, id);
      if (noCarTxt == null) {
        break missingId;
      }

      id = R.id.paymentmethod;
      RelativeLayout paymentmethod = ViewBindings.findChildViewById(rootView, id);
      if (paymentmethod == null) {
        break missingId;
      }

      id = R.id.paymentmethod_change;
      FontTextView paymentmethodChange = ViewBindings.findChildViewById(rootView, id);
      if (paymentmethodChange == null) {
        break missingId;
      }

      id = R.id.paymentmethod_img;
      ImageView paymentmethodImg = ViewBindings.findChildViewById(rootView, id);
      if (paymentmethodImg == null) {
        break missingId;
      }

      id = R.id.paymentmethod_type;
      FontTextView paymentmethodType = ViewBindings.findChildViewById(rootView, id);
      if (paymentmethodType == null) {
        break missingId;
      }

      id = R.id.pickup_location;
      FontTextView pickupLocation = ViewBindings.findChildViewById(rootView, id);
      if (pickupLocation == null) {
        break missingId;
      }

      id = R.id.pool_rate;
      FontTextView poolRate = ViewBindings.findChildViewById(rootView, id);
      if (poolRate == null) {
        break missingId;
      }

      id = R.id.pool_title;
      FontTextView poolTitle = ViewBindings.findChildViewById(rootView, id);
      if (poolTitle == null) {
        break missingId;
      }

      id = R.id.profile_image1;
      ImageView profileImage1 = ViewBindings.findChildViewById(rootView, id);
      if (profileImage1 == null) {
        break missingId;
      }

      id = R.id.requestuber;
      FontTextView requestuber = ViewBindings.findChildViewById(rootView, id);
      if (requestuber == null) {
        break missingId;
      }

      id = R.id.requestubers;
      RelativeLayout requestubers = ViewBindings.findChildViewById(rootView, id);
      if (requestubers == null) {
        break missingId;
      }

      id = R.id.reserve;
      LinearLayout reserve = ViewBindings.findChildViewById(rootView, id);
      if (reserve == null) {
        break missingId;
      }

      id = R.id.ride;
      LinearLayout ride = ViewBindings.findChildViewById(rootView, id);
      if (ride == null) {
        break missingId;
      }

      id = R.id.rideicon;
      ImageView rideicon = ViewBindings.findChildViewById(rootView, id);
      if (rideicon == null) {
        break missingId;
      }

      id = R.id.rlt_contact_admin;
      RelativeLayout rltContactAdmin = ViewBindings.findChildViewById(rootView, id);
      if (rltContactAdmin == null) {
        break missingId;
      }

      id = R.id.rlt_navi;
      RelativeLayout rltNavi = ViewBindings.findChildViewById(rootView, id);
      if (rltNavi == null) {
        break missingId;
      }

      id = R.id.rlt_pool_header;
      RelativeLayout rltPoolHeader = ViewBindings.findChildViewById(rootView, id);
      if (rltPoolHeader == null) {
        break missingId;
      }

      id = R.id.rv_seatlist;
      RecyclerView rvSeatlist = ViewBindings.findChildViewById(rootView, id);
      if (rvSeatlist == null) {
        break missingId;
      }

      id = R.id.scheduleride;
      ImageView scheduleride = ViewBindings.findChildViewById(rootView, id);
      if (scheduleride == null) {
        break missingId;
      }

      id = R.id.sliders;
      RelativeLayout sliders = ViewBindings.findChildViewById(rootView, id);
      if (sliders == null) {
        break missingId;
      }

      id = R.id.textview1;
      FontTextView textview1 = ViewBindings.findChildViewById(rootView, id);
      if (textview1 == null) {
        break missingId;
      }

      id = R.id.tv_count;
      TextView tvCount = ViewBindings.findChildViewById(rootView, id);
      if (tvCount == null) {
        break missingId;
      }

      id = R.id.tv_eta;
      FontTextView tvEta = ViewBindings.findChildViewById(rootView, id);
      if (tvEta == null) {
        break missingId;
      }

      id = R.id.tv_waiting_charge_fee;
      FontTextView tvWaitingChargeFee = ViewBindings.findChildViewById(rootView, id);
      if (tvWaitingChargeFee == null) {
        break missingId;
      }

      id = R.id.tv_waiting_charge_fee_for_accepted_car;
      FontTextView tvWaitingChargeFeeForAcceptedCar = ViewBindings.findChildViewById(rootView, id);
      if (tvWaitingChargeFeeForAcceptedCar == null) {
        break missingId;
      }

      id = R.id.wallet_img;
      ImageView walletImg = ViewBindings.findChildViewById(rootView, id);
      if (walletImg == null) {
        break missingId;
      }

      id = R.id.whereto;
      FontTextView whereto = ViewBindings.findChildViewById(rootView, id);
      if (whereto == null) {
        break missingId;
      }

      id = R.id.whereto_and_schedule;
      RelativeLayout wheretoAndSchedule = ViewBindings.findChildViewById(rootView, id);
      if (wheretoAndSchedule == null) {
        break missingId;
      }

      return new AppContentMainBinding((RelativeLayout) rootView, activityFareEstimation, backPool,
          bike, bottomNavigation, bottomlayout, bottomlayout1, carDetailsList, cardMap, cardMap1,
          cardMapView, confirmSeat, contentMain, cvRefresh, driverCarName, driverCarNumber,
          driverName, driverOtp, driverRating, editMap, fabStartChat, horiviewsslides, imageSlider,
          imageslide, imageslider, imglayout2, imgvChat, ivNav, layoutRequestSeat, line, loadingCar,
          meetlayout, noCar, noCarTxt, paymentmethod, paymentmethodChange, paymentmethodImg,
          paymentmethodType, pickupLocation, poolRate, poolTitle, profileImage1, requestuber,
          requestubers, reserve, ride, rideicon, rltContactAdmin, rltNavi, rltPoolHeader,
          rvSeatlist, scheduleride, sliders, textview1, tvCount, tvEta, tvWaitingChargeFee,
          tvWaitingChargeFeeForAcceptedCar, walletImg, whereto, wheretoAndSchedule);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
