// Generated by view binder compiler. Do not edit!
package com.newtaxiprime.user.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.newtaxiprime.user.R;
import com.newtaxiprime.user.appcommon.custompalette.FontTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCarsAvailableBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final FontTextView amount;

  @NonNull
  public final FontTextView capacity;

  @NonNull
  public final ImageView car2;

  @NonNull
  public final FontTextView carname;

  @NonNull
  public final RelativeLayout discribctionlay;

  @NonNull
  public final RelativeLayout done;

  @NonNull
  public final ImageView faredeatils;

  @NonNull
  public final RelativeLayout mainlayout;

  @NonNull
  public final FontTextView people;

  @NonNull
  public final RelativeLayout secondlayout;

  @NonNull
  public final FontTextView tvFare;

  private ActivityCarsAvailableBinding(@NonNull RelativeLayout rootView,
      @NonNull FontTextView amount, @NonNull FontTextView capacity, @NonNull ImageView car2,
      @NonNull FontTextView carname, @NonNull RelativeLayout discribctionlay,
      @NonNull RelativeLayout done, @NonNull ImageView faredeatils,
      @NonNull RelativeLayout mainlayout, @NonNull FontTextView people,
      @NonNull RelativeLayout secondlayout, @NonNull FontTextView tvFare) {
    this.rootView = rootView;
    this.amount = amount;
    this.capacity = capacity;
    this.car2 = car2;
    this.carname = carname;
    this.discribctionlay = discribctionlay;
    this.done = done;
    this.faredeatils = faredeatils;
    this.mainlayout = mainlayout;
    this.people = people;
    this.secondlayout = secondlayout;
    this.tvFare = tvFare;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCarsAvailableBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCarsAvailableBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_cars_available, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCarsAvailableBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.amount;
      FontTextView amount = ViewBindings.findChildViewById(rootView, id);
      if (amount == null) {
        break missingId;
      }

      id = R.id.capacity;
      FontTextView capacity = ViewBindings.findChildViewById(rootView, id);
      if (capacity == null) {
        break missingId;
      }

      id = R.id.car2;
      ImageView car2 = ViewBindings.findChildViewById(rootView, id);
      if (car2 == null) {
        break missingId;
      }

      id = R.id.carname;
      FontTextView carname = ViewBindings.findChildViewById(rootView, id);
      if (carname == null) {
        break missingId;
      }

      id = R.id.discribctionlay;
      RelativeLayout discribctionlay = ViewBindings.findChildViewById(rootView, id);
      if (discribctionlay == null) {
        break missingId;
      }

      id = R.id.done;
      RelativeLayout done = ViewBindings.findChildViewById(rootView, id);
      if (done == null) {
        break missingId;
      }

      id = R.id.faredeatils;
      ImageView faredeatils = ViewBindings.findChildViewById(rootView, id);
      if (faredeatils == null) {
        break missingId;
      }

      id = R.id.mainlayout;
      RelativeLayout mainlayout = ViewBindings.findChildViewById(rootView, id);
      if (mainlayout == null) {
        break missingId;
      }

      id = R.id.people;
      FontTextView people = ViewBindings.findChildViewById(rootView, id);
      if (people == null) {
        break missingId;
      }

      id = R.id.secondlayout;
      RelativeLayout secondlayout = ViewBindings.findChildViewById(rootView, id);
      if (secondlayout == null) {
        break missingId;
      }

      id = R.id.tv_fare;
      FontTextView tvFare = ViewBindings.findChildViewById(rootView, id);
      if (tvFare == null) {
        break missingId;
      }

      return new ActivityCarsAvailableBinding((RelativeLayout) rootView, amount, capacity, car2,
          carname, discribctionlay, done, faredeatils, mainlayout, people, secondlayout, tvFare);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
