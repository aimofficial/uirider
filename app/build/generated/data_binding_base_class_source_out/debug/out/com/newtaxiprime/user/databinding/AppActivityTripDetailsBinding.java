// Generated by view binder compiler. Do not edit!
package com.newtaxiprime.user.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.newtaxiprime.user.R;
import com.newtaxiprime.user.appcommon.custompalette.FontButton;
import com.newtaxiprime.user.appcommon.custompalette.FontTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AppActivityTripDetailsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final FontTextView amountcard;

  @NonNull
  public final FontButton btnrate;

  @NonNull
  public final TextView cancel;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final CardView cardView1;

  @NonNull
  public final FontTextView carname;

  @NonNull
  public final AppCommonHeaderBinding commonHeader;

  @NonNull
  public final FontTextView datetime;

  @NonNull
  public final ImageView destPoint;

  @NonNull
  public final FontTextView driverName;

  @NonNull
  public final RelativeLayout imagelayout;

  @NonNull
  public final ImageView ivProfileimage;

  @NonNull
  public final ImageView mapimage;

  @NonNull
  public final ImageView pickupPoint;

  @NonNull
  public final RelativeLayout profilelayout;

  @NonNull
  public final RelativeLayout relativeLayout2;

  @NonNull
  public final RelativeLayout rltAddress;

  @NonNull
  public final RelativeLayout rltDroplocation;

  @NonNull
  public final RelativeLayout rltMapview;

  @NonNull
  public final RelativeLayout rltPicklocation;

  @NonNull
  public final RelativeLayout rltTimingdetails;

  @NonNull
  public final RecyclerView rvPrice;

  @NonNull
  public final FontTextView seatcount;

  @NonNull
  public final FontTextView tvDropAddress;

  @NonNull
  public final FontTextView tvPickAddress;

  @NonNull
  public final FontTextView tvTripid;

  @NonNull
  public final FontTextView tvTripstatus;

  @NonNull
  public final TextView vrLine;

  private AppActivityTripDetailsBinding(@NonNull RelativeLayout rootView,
      @NonNull FontTextView amountcard, @NonNull FontButton btnrate, @NonNull TextView cancel,
      @NonNull CardView cardView, @NonNull CardView cardView1, @NonNull FontTextView carname,
      @NonNull AppCommonHeaderBinding commonHeader, @NonNull FontTextView datetime,
      @NonNull ImageView destPoint, @NonNull FontTextView driverName,
      @NonNull RelativeLayout imagelayout, @NonNull ImageView ivProfileimage,
      @NonNull ImageView mapimage, @NonNull ImageView pickupPoint,
      @NonNull RelativeLayout profilelayout, @NonNull RelativeLayout relativeLayout2,
      @NonNull RelativeLayout rltAddress, @NonNull RelativeLayout rltDroplocation,
      @NonNull RelativeLayout rltMapview, @NonNull RelativeLayout rltPicklocation,
      @NonNull RelativeLayout rltTimingdetails, @NonNull RecyclerView rvPrice,
      @NonNull FontTextView seatcount, @NonNull FontTextView tvDropAddress,
      @NonNull FontTextView tvPickAddress, @NonNull FontTextView tvTripid,
      @NonNull FontTextView tvTripstatus, @NonNull TextView vrLine) {
    this.rootView = rootView;
    this.amountcard = amountcard;
    this.btnrate = btnrate;
    this.cancel = cancel;
    this.cardView = cardView;
    this.cardView1 = cardView1;
    this.carname = carname;
    this.commonHeader = commonHeader;
    this.datetime = datetime;
    this.destPoint = destPoint;
    this.driverName = driverName;
    this.imagelayout = imagelayout;
    this.ivProfileimage = ivProfileimage;
    this.mapimage = mapimage;
    this.pickupPoint = pickupPoint;
    this.profilelayout = profilelayout;
    this.relativeLayout2 = relativeLayout2;
    this.rltAddress = rltAddress;
    this.rltDroplocation = rltDroplocation;
    this.rltMapview = rltMapview;
    this.rltPicklocation = rltPicklocation;
    this.rltTimingdetails = rltTimingdetails;
    this.rvPrice = rvPrice;
    this.seatcount = seatcount;
    this.tvDropAddress = tvDropAddress;
    this.tvPickAddress = tvPickAddress;
    this.tvTripid = tvTripid;
    this.tvTripstatus = tvTripstatus;
    this.vrLine = vrLine;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AppActivityTripDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AppActivityTripDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.app_activity_trip_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AppActivityTripDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.amountcard;
      FontTextView amountcard = ViewBindings.findChildViewById(rootView, id);
      if (amountcard == null) {
        break missingId;
      }

      id = R.id.btnrate;
      FontButton btnrate = ViewBindings.findChildViewById(rootView, id);
      if (btnrate == null) {
        break missingId;
      }

      id = R.id.cancel;
      TextView cancel = ViewBindings.findChildViewById(rootView, id);
      if (cancel == null) {
        break missingId;
      }

      id = R.id.card_view;
      CardView cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.card_view1;
      CardView cardView1 = ViewBindings.findChildViewById(rootView, id);
      if (cardView1 == null) {
        break missingId;
      }

      id = R.id.carname;
      FontTextView carname = ViewBindings.findChildViewById(rootView, id);
      if (carname == null) {
        break missingId;
      }

      id = R.id.common_header;
      View commonHeader = ViewBindings.findChildViewById(rootView, id);
      if (commonHeader == null) {
        break missingId;
      }
      AppCommonHeaderBinding binding_commonHeader = AppCommonHeaderBinding.bind(commonHeader);

      id = R.id.datetime;
      FontTextView datetime = ViewBindings.findChildViewById(rootView, id);
      if (datetime == null) {
        break missingId;
      }

      id = R.id.dest_point;
      ImageView destPoint = ViewBindings.findChildViewById(rootView, id);
      if (destPoint == null) {
        break missingId;
      }

      id = R.id.driver_name;
      FontTextView driverName = ViewBindings.findChildViewById(rootView, id);
      if (driverName == null) {
        break missingId;
      }

      id = R.id.imagelayout;
      RelativeLayout imagelayout = ViewBindings.findChildViewById(rootView, id);
      if (imagelayout == null) {
        break missingId;
      }

      id = R.id.iv_profileimage;
      ImageView ivProfileimage = ViewBindings.findChildViewById(rootView, id);
      if (ivProfileimage == null) {
        break missingId;
      }

      id = R.id.mapimage;
      ImageView mapimage = ViewBindings.findChildViewById(rootView, id);
      if (mapimage == null) {
        break missingId;
      }

      id = R.id.pickup_point;
      ImageView pickupPoint = ViewBindings.findChildViewById(rootView, id);
      if (pickupPoint == null) {
        break missingId;
      }

      id = R.id.profilelayout;
      RelativeLayout profilelayout = ViewBindings.findChildViewById(rootView, id);
      if (profilelayout == null) {
        break missingId;
      }

      id = R.id.relativeLayout2;
      RelativeLayout relativeLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (relativeLayout2 == null) {
        break missingId;
      }

      id = R.id.rlt_address;
      RelativeLayout rltAddress = ViewBindings.findChildViewById(rootView, id);
      if (rltAddress == null) {
        break missingId;
      }

      id = R.id.rlt_droplocation;
      RelativeLayout rltDroplocation = ViewBindings.findChildViewById(rootView, id);
      if (rltDroplocation == null) {
        break missingId;
      }

      id = R.id.rlt_mapview;
      RelativeLayout rltMapview = ViewBindings.findChildViewById(rootView, id);
      if (rltMapview == null) {
        break missingId;
      }

      id = R.id.rlt_picklocation;
      RelativeLayout rltPicklocation = ViewBindings.findChildViewById(rootView, id);
      if (rltPicklocation == null) {
        break missingId;
      }

      id = R.id.rlt_timingdetails;
      RelativeLayout rltTimingdetails = ViewBindings.findChildViewById(rootView, id);
      if (rltTimingdetails == null) {
        break missingId;
      }

      id = R.id.rvPrice;
      RecyclerView rvPrice = ViewBindings.findChildViewById(rootView, id);
      if (rvPrice == null) {
        break missingId;
      }

      id = R.id.seatcount;
      FontTextView seatcount = ViewBindings.findChildViewById(rootView, id);
      if (seatcount == null) {
        break missingId;
      }

      id = R.id.tv_drop_address;
      FontTextView tvDropAddress = ViewBindings.findChildViewById(rootView, id);
      if (tvDropAddress == null) {
        break missingId;
      }

      id = R.id.tv_pick_Address;
      FontTextView tvPickAddress = ViewBindings.findChildViewById(rootView, id);
      if (tvPickAddress == null) {
        break missingId;
      }

      id = R.id.tv_tripid;
      FontTextView tvTripid = ViewBindings.findChildViewById(rootView, id);
      if (tvTripid == null) {
        break missingId;
      }

      id = R.id.tv_tripstatus;
      FontTextView tvTripstatus = ViewBindings.findChildViewById(rootView, id);
      if (tvTripstatus == null) {
        break missingId;
      }

      id = R.id.vr_line;
      TextView vrLine = ViewBindings.findChildViewById(rootView, id);
      if (vrLine == null) {
        break missingId;
      }

      return new AppActivityTripDetailsBinding((RelativeLayout) rootView, amountcard, btnrate,
          cancel, cardView, cardView1, carname, binding_commonHeader, datetime, destPoint,
          driverName, imagelayout, ivProfileimage, mapimage, pickupPoint, profilelayout,
          relativeLayout2, rltAddress, rltDroplocation, rltMapview, rltPicklocation,
          rltTimingdetails, rvPrice, seatcount, tvDropAddress, tvPickAddress, tvTripid,
          tvTripstatus, vrLine);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
