// Generated by view binder compiler. Do not edit!
package com.newtaxiprime.user.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.newtaxiprime.user.R;
import com.newtaxiprime.user.appcommon.custompalette.FontEditText;
import com.newtaxiprime.user.appcommon.custompalette.FontTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AppActivityAddHomeBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ScrollView addressSearch;

  @NonNull
  public final AppCommonHeaderBinding commonHeader;

  @NonNull
  public final FontEditText destadddress;

  @NonNull
  public final FontTextView destclose;

  @NonNull
  public final FontTextView dropDone;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final RecyclerView locationPlacesearch;

  @NonNull
  public final RelativeLayout mainlayout;

  @NonNull
  public final ImageView pinMap;

  @NonNull
  public final LinearLayout setlocationOnmap;

  @NonNull
  public final FontTextView setlocationimage;

  private AppActivityAddHomeBinding(@NonNull RelativeLayout rootView,
      @NonNull ScrollView addressSearch, @NonNull AppCommonHeaderBinding commonHeader,
      @NonNull FontEditText destadddress, @NonNull FontTextView destclose,
      @NonNull FontTextView dropDone, @NonNull LinearLayout linearLayout,
      @NonNull RecyclerView locationPlacesearch, @NonNull RelativeLayout mainlayout,
      @NonNull ImageView pinMap, @NonNull LinearLayout setlocationOnmap,
      @NonNull FontTextView setlocationimage) {
    this.rootView = rootView;
    this.addressSearch = addressSearch;
    this.commonHeader = commonHeader;
    this.destadddress = destadddress;
    this.destclose = destclose;
    this.dropDone = dropDone;
    this.linearLayout = linearLayout;
    this.locationPlacesearch = locationPlacesearch;
    this.mainlayout = mainlayout;
    this.pinMap = pinMap;
    this.setlocationOnmap = setlocationOnmap;
    this.setlocationimage = setlocationimage;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AppActivityAddHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AppActivityAddHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.app_activity_add_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AppActivityAddHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.address_search;
      ScrollView addressSearch = ViewBindings.findChildViewById(rootView, id);
      if (addressSearch == null) {
        break missingId;
      }

      id = R.id.common_header;
      View commonHeader = ViewBindings.findChildViewById(rootView, id);
      if (commonHeader == null) {
        break missingId;
      }
      AppCommonHeaderBinding binding_commonHeader = AppCommonHeaderBinding.bind(commonHeader);

      id = R.id.destadddress;
      FontEditText destadddress = ViewBindings.findChildViewById(rootView, id);
      if (destadddress == null) {
        break missingId;
      }

      id = R.id.destclose;
      FontTextView destclose = ViewBindings.findChildViewById(rootView, id);
      if (destclose == null) {
        break missingId;
      }

      id = R.id.drop_done;
      FontTextView dropDone = ViewBindings.findChildViewById(rootView, id);
      if (dropDone == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.location_placesearch;
      RecyclerView locationPlacesearch = ViewBindings.findChildViewById(rootView, id);
      if (locationPlacesearch == null) {
        break missingId;
      }

      id = R.id.mainlayout;
      RelativeLayout mainlayout = ViewBindings.findChildViewById(rootView, id);
      if (mainlayout == null) {
        break missingId;
      }

      id = R.id.pin_map;
      ImageView pinMap = ViewBindings.findChildViewById(rootView, id);
      if (pinMap == null) {
        break missingId;
      }

      id = R.id.setlocation_onmap;
      LinearLayout setlocationOnmap = ViewBindings.findChildViewById(rootView, id);
      if (setlocationOnmap == null) {
        break missingId;
      }

      id = R.id.setlocationimage;
      FontTextView setlocationimage = ViewBindings.findChildViewById(rootView, id);
      if (setlocationimage == null) {
        break missingId;
      }

      return new AppActivityAddHomeBinding((RelativeLayout) rootView, addressSearch,
          binding_commonHeader, destadddress, destclose, dropDone, linearLayout,
          locationPlacesearch, mainlayout, pinMap, setlocationOnmap, setlocationimage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
