// Generated by view binder compiler. Do not edit!
package com.newtaxiprime.user.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.newtaxiprime.user.R;
import com.newtaxiprime.user.appcommon.custompalette.FontTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AppActivityReceiptBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RelativeLayout accesslayout;

  @NonNull
  public final FontTextView basefareAmount;

  @NonNull
  public final RelativeLayout basrfarelayout;

  @NonNull
  public final FontTextView distanceFare;

  @NonNull
  public final RelativeLayout distancelayout;

  @NonNull
  public final FontTextView faretxt;

  @NonNull
  public final FontTextView fee;

  @NonNull
  public final FontTextView payableamount;

  @NonNull
  public final RelativeLayout payableamountlayout;

  @NonNull
  public final FontTextView promoamount;

  @NonNull
  public final RelativeLayout promoamountlayout;

  @NonNull
  public final RecyclerView rvPrice;

  @NonNull
  public final FontTextView timeFare;

  @NonNull
  public final RelativeLayout timefarelayout;

  @NonNull
  public final FontTextView totalPayouts;

  @NonNull
  public final FontTextView totalamount;

  @NonNull
  public final RelativeLayout totalamountlayout;

  @NonNull
  public final FontTextView walletamount;

  @NonNull
  public final RelativeLayout walletamountlayout;

  private AppActivityReceiptBinding(@NonNull LinearLayout rootView,
      @NonNull RelativeLayout accesslayout, @NonNull FontTextView basefareAmount,
      @NonNull RelativeLayout basrfarelayout, @NonNull FontTextView distanceFare,
      @NonNull RelativeLayout distancelayout, @NonNull FontTextView faretxt,
      @NonNull FontTextView fee, @NonNull FontTextView payableamount,
      @NonNull RelativeLayout payableamountlayout, @NonNull FontTextView promoamount,
      @NonNull RelativeLayout promoamountlayout, @NonNull RecyclerView rvPrice,
      @NonNull FontTextView timeFare, @NonNull RelativeLayout timefarelayout,
      @NonNull FontTextView totalPayouts, @NonNull FontTextView totalamount,
      @NonNull RelativeLayout totalamountlayout, @NonNull FontTextView walletamount,
      @NonNull RelativeLayout walletamountlayout) {
    this.rootView = rootView;
    this.accesslayout = accesslayout;
    this.basefareAmount = basefareAmount;
    this.basrfarelayout = basrfarelayout;
    this.distanceFare = distanceFare;
    this.distancelayout = distancelayout;
    this.faretxt = faretxt;
    this.fee = fee;
    this.payableamount = payableamount;
    this.payableamountlayout = payableamountlayout;
    this.promoamount = promoamount;
    this.promoamountlayout = promoamountlayout;
    this.rvPrice = rvPrice;
    this.timeFare = timeFare;
    this.timefarelayout = timefarelayout;
    this.totalPayouts = totalPayouts;
    this.totalamount = totalamount;
    this.totalamountlayout = totalamountlayout;
    this.walletamount = walletamount;
    this.walletamountlayout = walletamountlayout;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AppActivityReceiptBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AppActivityReceiptBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.app_activity_receipt, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AppActivityReceiptBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.accesslayout;
      RelativeLayout accesslayout = ViewBindings.findChildViewById(rootView, id);
      if (accesslayout == null) {
        break missingId;
      }

      id = R.id.basefare_amount;
      FontTextView basefareAmount = ViewBindings.findChildViewById(rootView, id);
      if (basefareAmount == null) {
        break missingId;
      }

      id = R.id.basrfarelayout;
      RelativeLayout basrfarelayout = ViewBindings.findChildViewById(rootView, id);
      if (basrfarelayout == null) {
        break missingId;
      }

      id = R.id.distance_fare;
      FontTextView distanceFare = ViewBindings.findChildViewById(rootView, id);
      if (distanceFare == null) {
        break missingId;
      }

      id = R.id.distancelayout;
      RelativeLayout distancelayout = ViewBindings.findChildViewById(rootView, id);
      if (distancelayout == null) {
        break missingId;
      }

      id = R.id.faretxt;
      FontTextView faretxt = ViewBindings.findChildViewById(rootView, id);
      if (faretxt == null) {
        break missingId;
      }

      id = R.id.fee;
      FontTextView fee = ViewBindings.findChildViewById(rootView, id);
      if (fee == null) {
        break missingId;
      }

      id = R.id.payableamount;
      FontTextView payableamount = ViewBindings.findChildViewById(rootView, id);
      if (payableamount == null) {
        break missingId;
      }

      id = R.id.payableamountlayout;
      RelativeLayout payableamountlayout = ViewBindings.findChildViewById(rootView, id);
      if (payableamountlayout == null) {
        break missingId;
      }

      id = R.id.promoamount;
      FontTextView promoamount = ViewBindings.findChildViewById(rootView, id);
      if (promoamount == null) {
        break missingId;
      }

      id = R.id.promoamountlayout;
      RelativeLayout promoamountlayout = ViewBindings.findChildViewById(rootView, id);
      if (promoamountlayout == null) {
        break missingId;
      }

      id = R.id.rvPrice;
      RecyclerView rvPrice = ViewBindings.findChildViewById(rootView, id);
      if (rvPrice == null) {
        break missingId;
      }

      id = R.id.time_fare;
      FontTextView timeFare = ViewBindings.findChildViewById(rootView, id);
      if (timeFare == null) {
        break missingId;
      }

      id = R.id.timefarelayout;
      RelativeLayout timefarelayout = ViewBindings.findChildViewById(rootView, id);
      if (timefarelayout == null) {
        break missingId;
      }

      id = R.id.total_payouts;
      FontTextView totalPayouts = ViewBindings.findChildViewById(rootView, id);
      if (totalPayouts == null) {
        break missingId;
      }

      id = R.id.totalamount;
      FontTextView totalamount = ViewBindings.findChildViewById(rootView, id);
      if (totalamount == null) {
        break missingId;
      }

      id = R.id.totalamountlayout;
      RelativeLayout totalamountlayout = ViewBindings.findChildViewById(rootView, id);
      if (totalamountlayout == null) {
        break missingId;
      }

      id = R.id.walletamount;
      FontTextView walletamount = ViewBindings.findChildViewById(rootView, id);
      if (walletamount == null) {
        break missingId;
      }

      id = R.id.walletamountlayout;
      RelativeLayout walletamountlayout = ViewBindings.findChildViewById(rootView, id);
      if (walletamountlayout == null) {
        break missingId;
      }

      return new AppActivityReceiptBinding((LinearLayout) rootView, accesslayout, basefareAmount,
          basrfarelayout, distanceFare, distancelayout, faretxt, fee, payableamount,
          payableamountlayout, promoamount, promoamountlayout, rvPrice, timeFare, timefarelayout,
          totalPayouts, totalamount, totalamountlayout, walletamount, walletamountlayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
