// Generated by view binder compiler. Do not edit!
package com.newtaxiprime.user.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.newtaxiprime.user.R;
import com.newtaxiprime.user.taxiapp.singledateandtimepicker.widget.WheelAmPmPicker;
import com.newtaxiprime.user.taxiapp.singledateandtimepicker.widget.WheelDayOfMonthPicker;
import com.newtaxiprime.user.taxiapp.singledateandtimepicker.widget.WheelDayPicker;
import com.newtaxiprime.user.taxiapp.singledateandtimepicker.widget.WheelHourPicker;
import com.newtaxiprime.user.taxiapp.singledateandtimepicker.widget.WheelMinutePicker;
import com.newtaxiprime.user.taxiapp.singledateandtimepicker.widget.WheelMonthPicker;
import com.newtaxiprime.user.taxiapp.singledateandtimepicker.widget.WheelYearPicker;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SingleDayPickerBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final WheelAmPmPicker amPmPicker;

  @NonNull
  public final WheelDayOfMonthPicker daysOfMonthPicker;

  @NonNull
  public final WheelDayPicker daysPicker;

  @NonNull
  public final View dtSelector;

  @NonNull
  public final WheelHourPicker hoursPicker;

  @NonNull
  public final WheelMinutePicker minutesPicker;

  @NonNull
  public final WheelMonthPicker monthPicker;

  @NonNull
  public final WheelYearPicker yearPicker;

  private SingleDayPickerBinding(@NonNull FrameLayout rootView, @NonNull WheelAmPmPicker amPmPicker,
      @NonNull WheelDayOfMonthPicker daysOfMonthPicker, @NonNull WheelDayPicker daysPicker,
      @NonNull View dtSelector, @NonNull WheelHourPicker hoursPicker,
      @NonNull WheelMinutePicker minutesPicker, @NonNull WheelMonthPicker monthPicker,
      @NonNull WheelYearPicker yearPicker) {
    this.rootView = rootView;
    this.amPmPicker = amPmPicker;
    this.daysOfMonthPicker = daysOfMonthPicker;
    this.daysPicker = daysPicker;
    this.dtSelector = dtSelector;
    this.hoursPicker = hoursPicker;
    this.minutesPicker = minutesPicker;
    this.monthPicker = monthPicker;
    this.yearPicker = yearPicker;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SingleDayPickerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SingleDayPickerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.single_day_picker, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SingleDayPickerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.amPmPicker;
      WheelAmPmPicker amPmPicker = ViewBindings.findChildViewById(rootView, id);
      if (amPmPicker == null) {
        break missingId;
      }

      id = R.id.daysOfMonthPicker;
      WheelDayOfMonthPicker daysOfMonthPicker = ViewBindings.findChildViewById(rootView, id);
      if (daysOfMonthPicker == null) {
        break missingId;
      }

      id = R.id.daysPicker;
      WheelDayPicker daysPicker = ViewBindings.findChildViewById(rootView, id);
      if (daysPicker == null) {
        break missingId;
      }

      id = R.id.dtSelector;
      View dtSelector = ViewBindings.findChildViewById(rootView, id);
      if (dtSelector == null) {
        break missingId;
      }

      id = R.id.hoursPicker;
      WheelHourPicker hoursPicker = ViewBindings.findChildViewById(rootView, id);
      if (hoursPicker == null) {
        break missingId;
      }

      id = R.id.minutesPicker;
      WheelMinutePicker minutesPicker = ViewBindings.findChildViewById(rootView, id);
      if (minutesPicker == null) {
        break missingId;
      }

      id = R.id.monthPicker;
      WheelMonthPicker monthPicker = ViewBindings.findChildViewById(rootView, id);
      if (monthPicker == null) {
        break missingId;
      }

      id = R.id.yearPicker;
      WheelYearPicker yearPicker = ViewBindings.findChildViewById(rootView, id);
      if (yearPicker == null) {
        break missingId;
      }

      return new SingleDayPickerBinding((FrameLayout) rootView, amPmPicker, daysOfMonthPicker,
          daysPicker, dtSelector, hoursPicker, minutesPicker, monthPicker, yearPicker);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
