// Generated by view binder compiler. Do not edit!
package com.newtaxiprime.user.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputLayout;
import com.hbb20.CountryCodePicker;
import com.newtaxiprime.user.R;
import com.newtaxiprime.user.appcommon.custompalette.FontButton;
import com.newtaxiprime.user.appcommon.custompalette.FontEditText;
import com.newtaxiprime.user.appcommon.custompalette.FontTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AppActivitySssocialDetailsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CountryCodePicker ccp;

  @NonNull
  public final AppCommonHeaderBinding commonHeader;

  @NonNull
  public final FontEditText inputEmail;

  @NonNull
  public final FontEditText inputFirst;

  @NonNull
  public final FontEditText inputLast;

  @NonNull
  public final TextInputLayout inputLayoutPassword;

  @NonNull
  public final TextInputLayout inputLayoutPhone;

  @NonNull
  public final TextInputLayout inputLayoutReferral;

  @NonNull
  public final FontEditText inputMatric;

  @NonNull
  public final FontEditText inputPassword;

  @NonNull
  public final FontEditText inputPhone;

  @NonNull
  public final FontEditText inputReferral;

  @NonNull
  public final LinearLayout namelayout;

  @NonNull
  public final FontTextView namemsg;

  @NonNull
  public final LinearLayout nextLogin;

  @NonNull
  public final RelativeLayout phonelayout;

  @NonNull
  public final FontButton socialdetailnext;

  @NonNull
  public final SelectGenderBinding vGender;

  private AppActivitySssocialDetailsBinding(@NonNull ConstraintLayout rootView,
      @NonNull CountryCodePicker ccp, @NonNull AppCommonHeaderBinding commonHeader,
      @NonNull FontEditText inputEmail, @NonNull FontEditText inputFirst,
      @NonNull FontEditText inputLast, @NonNull TextInputLayout inputLayoutPassword,
      @NonNull TextInputLayout inputLayoutPhone, @NonNull TextInputLayout inputLayoutReferral,
      @NonNull FontEditText inputMatric, @NonNull FontEditText inputPassword,
      @NonNull FontEditText inputPhone, @NonNull FontEditText inputReferral,
      @NonNull LinearLayout namelayout, @NonNull FontTextView namemsg,
      @NonNull LinearLayout nextLogin, @NonNull RelativeLayout phonelayout,
      @NonNull FontButton socialdetailnext, @NonNull SelectGenderBinding vGender) {
    this.rootView = rootView;
    this.ccp = ccp;
    this.commonHeader = commonHeader;
    this.inputEmail = inputEmail;
    this.inputFirst = inputFirst;
    this.inputLast = inputLast;
    this.inputLayoutPassword = inputLayoutPassword;
    this.inputLayoutPhone = inputLayoutPhone;
    this.inputLayoutReferral = inputLayoutReferral;
    this.inputMatric = inputMatric;
    this.inputPassword = inputPassword;
    this.inputPhone = inputPhone;
    this.inputReferral = inputReferral;
    this.namelayout = namelayout;
    this.namemsg = namemsg;
    this.nextLogin = nextLogin;
    this.phonelayout = phonelayout;
    this.socialdetailnext = socialdetailnext;
    this.vGender = vGender;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AppActivitySssocialDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AppActivitySssocialDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.app_activity_sssocial_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AppActivitySssocialDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ccp;
      CountryCodePicker ccp = ViewBindings.findChildViewById(rootView, id);
      if (ccp == null) {
        break missingId;
      }

      id = R.id.common_header;
      View commonHeader = ViewBindings.findChildViewById(rootView, id);
      if (commonHeader == null) {
        break missingId;
      }
      AppCommonHeaderBinding binding_commonHeader = AppCommonHeaderBinding.bind(commonHeader);

      id = R.id.input_email;
      FontEditText inputEmail = ViewBindings.findChildViewById(rootView, id);
      if (inputEmail == null) {
        break missingId;
      }

      id = R.id.input_first;
      FontEditText inputFirst = ViewBindings.findChildViewById(rootView, id);
      if (inputFirst == null) {
        break missingId;
      }

      id = R.id.input_last;
      FontEditText inputLast = ViewBindings.findChildViewById(rootView, id);
      if (inputLast == null) {
        break missingId;
      }

      id = R.id.input_layout_password;
      TextInputLayout inputLayoutPassword = ViewBindings.findChildViewById(rootView, id);
      if (inputLayoutPassword == null) {
        break missingId;
      }

      id = R.id.input_layout_phone;
      TextInputLayout inputLayoutPhone = ViewBindings.findChildViewById(rootView, id);
      if (inputLayoutPhone == null) {
        break missingId;
      }

      id = R.id.input_layout_referral;
      TextInputLayout inputLayoutReferral = ViewBindings.findChildViewById(rootView, id);
      if (inputLayoutReferral == null) {
        break missingId;
      }

      id = R.id.input_matric;
      FontEditText inputMatric = ViewBindings.findChildViewById(rootView, id);
      if (inputMatric == null) {
        break missingId;
      }

      id = R.id.input_password;
      FontEditText inputPassword = ViewBindings.findChildViewById(rootView, id);
      if (inputPassword == null) {
        break missingId;
      }

      id = R.id.input_phone;
      FontEditText inputPhone = ViewBindings.findChildViewById(rootView, id);
      if (inputPhone == null) {
        break missingId;
      }

      id = R.id.input_referral;
      FontEditText inputReferral = ViewBindings.findChildViewById(rootView, id);
      if (inputReferral == null) {
        break missingId;
      }

      id = R.id.namelayout;
      LinearLayout namelayout = ViewBindings.findChildViewById(rootView, id);
      if (namelayout == null) {
        break missingId;
      }

      id = R.id.namemsg;
      FontTextView namemsg = ViewBindings.findChildViewById(rootView, id);
      if (namemsg == null) {
        break missingId;
      }

      id = R.id.next_login;
      LinearLayout nextLogin = ViewBindings.findChildViewById(rootView, id);
      if (nextLogin == null) {
        break missingId;
      }

      id = R.id.phonelayout;
      RelativeLayout phonelayout = ViewBindings.findChildViewById(rootView, id);
      if (phonelayout == null) {
        break missingId;
      }

      id = R.id.socialdetailnext;
      FontButton socialdetailnext = ViewBindings.findChildViewById(rootView, id);
      if (socialdetailnext == null) {
        break missingId;
      }

      id = R.id.v_gender;
      View vGender = ViewBindings.findChildViewById(rootView, id);
      if (vGender == null) {
        break missingId;
      }
      SelectGenderBinding binding_vGender = SelectGenderBinding.bind(vGender);

      return new AppActivitySssocialDetailsBinding((ConstraintLayout) rootView, ccp,
          binding_commonHeader, inputEmail, inputFirst, inputLast, inputLayoutPassword,
          inputLayoutPhone, inputLayoutReferral, inputMatric, inputPassword, inputPhone,
          inputReferral, namelayout, namemsg, nextLogin, phonelayout, socialdetailnext,
          binding_vGender);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
